#!/bin/bash
#
# Script de d√©ploiement FFP3 avec vidage automatique des caches
# √Ä ex√©cuter sur le serveur de production via SSH
#
# Usage:
#   ssh oliviera@toaster
#   cd /home4/oliviera/iot.olution.info/ffp3
#   bash bin/deploy.sh
#

set -e  # Arr√™ter en cas d'erreur

echo "=========================================="
echo "üöÄ D√âPLOIEMENT FFP3 avec vidage de cache"
echo "=========================================="
echo ""

# V√©rifier qu'on est dans le bon dossier
if [ ! -f "composer.json" ]; then
    echo "‚ùå ERREUR: composer.json non trouv√©"
    echo "√ätes-vous dans /home4/oliviera/iot.olution.info/ffp3 ?"
    exit 1
fi

echo "üìç Dossier: $(pwd)"
echo ""

# √âtape 1: Pull depuis GitHub
echo "üì• [1/7] Pull depuis GitHub..."
git fetch origin
git pull origin main

if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors du git pull"
    echo ""
    echo "Essayez de r√©soudre avec:"
    echo "  git reset --hard origin/main"
    exit 1
fi

echo "‚úÖ Code mis √† jour"
echo ""

# √âtape 2: Vider les caches (NOUVEAU)
echo "üßπ [2/7] Vidage des caches Twig et DI..."
if [ -f "bin/clear-cache.php" ]; then
    php bin/clear-cache.php
    if [ $? -eq 0 ]; then
        echo "‚úÖ Caches vid√©s"
    else
        echo "‚ö†Ô∏è  Erreur lors du vidage des caches (non bloquant)"
    fi
else
    echo "‚ö†Ô∏è  Script bin/clear-cache.php introuvable"
    echo "   Vidage manuel des caches..."
    rm -rf var/cache/twig/* var/cache/di/* 2>/dev/null || true
    echo "‚úÖ Caches vid√©s manuellement"
fi
echo ""

# √âtape 3: Supprimer vendor/ si n√©cessaire
echo "üóëÔ∏è  [3/7] V√©rification vendor/..."
if [ -d "vendor" ]; then
    echo "‚ÑπÔ∏è  vendor/ existe d√©j√†"
else
    echo "‚ö†Ô∏è  vendor/ n'existe pas"
fi
echo ""

# √âtape 4: Installer/mettre √† jour les d√©pendances
echo "üì¶ [4/7] Installation des d√©pendances Composer..."
echo "Cela peut prendre 1-2 minutes..."
composer install --no-dev --optimize-autoloader

if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de composer install"
    echo ""
    echo "Essayez:"
    echo "  composer clear-cache"
    echo "  composer install --no-dev"
    exit 1
fi

echo "‚úÖ D√©pendances install√©es"
echo ""

# √âtape 5: Cr√©er les liens symboliques pour les assets
echo "üîó [5/7] Cr√©ation des liens symboliques..."

# Supprimer d'abord s'ils existent d√©j√†
rm -f assets manifest.json service-worker.js 2>/dev/null

# Cr√©er les liens symboliques
ln -s public/assets assets 2>/dev/null || true
ln -s public/manifest.json manifest.json 2>/dev/null || true
ln -s public/service-worker.js service-worker.js 2>/dev/null || true

if [ -L "assets" ] && [ -L "manifest.json" ]; then
    echo "‚úÖ Liens symboliques cr√©√©s:"
    echo "   assets -> public/assets"
    echo "   manifest.json -> public/manifest.json"
    echo "   service-worker.js -> public/service-worker.js"
else
    echo "‚ö†Ô∏è  Erreur lors de la cr√©ation des liens symboliques"
    echo "   (peut n√©cessiter des permissions sp√©ciales, non bloquant)"
fi
echo ""

# √âtape 6: V√©rifications
echo "üîç [6/7] V√©rifications..."

# PHP-DI
if [ -d "vendor/php-di" ]; then
    echo "  ‚úÖ php-di install√©"
else
    echo "  ‚ùå php-di MANQUANT !"
    exit 1
fi

# Twig
if [ -d "vendor/twig" ]; then
    echo "  ‚úÖ twig install√©"
else
    echo "  ‚ùå twig MANQUANT !"
    exit 1
fi

# Slim
if [ -d "vendor/slim" ]; then
    echo "  ‚úÖ slim install√©"
else
    echo "  ‚ùå slim MANQUANT !"
    exit 1
fi

# Test autoload
php -r "require 'vendor/autoload.php'; echo '';" 2>&1
if [ $? -eq 0 ]; then
    echo "  ‚úÖ Autoload fonctionne"
else
    echo "  ‚ùå Autoload en ERREUR !"
    exit 1
fi

echo ""

# √âtape 7: Ajustement des permissions
echo "üîß [7/7] Ajustement des permissions..."
chmod -R 755 public/ 2>/dev/null || true
chmod -R 775 var/cache/ 2>/dev/null || true
chmod +x bin/clear-cache.php 2>/dev/null || true
chmod +x bin/deploy.sh 2>/dev/null || true
echo "‚úÖ Permissions ajust√©es"
echo ""

# Version d√©ploy√©e
echo "üìå Version d√©ploy√©e:"
if [ -f "VERSION" ]; then
    cat VERSION
else
    echo "  ‚ö†Ô∏è  Fichier VERSION introuvable"
fi
echo ""

echo "=========================================="
echo "üéâ D√âPLOIEMENT R√âUSSI !"
echo "=========================================="
echo ""
echo "üß™ TESTEZ MAINTENANT:"
echo ""
echo "  1. Pages PRODUCTION:"
echo "     https://iot.olution.info/ffp3/aquaponie"
echo "     https://iot.olution.info/ffp3/dashboard"
echo "     https://iot.olution.info/ffp3/control"
echo ""
echo "  2. Pages TEST:"
echo "     https://iot.olution.info/ffp3/aquaponie-test"
echo "     https://iot.olution.info/ffp3/dashboard-test"
echo "     https://iot.olution.info/ffp3/control-test"
echo ""
echo "  3. V√©rifications (F12 Console):"
echo "     ‚úÖ Pas d'erreur 404 pour CSS/JS"
echo "     ‚úÖ Badge LIVE devient vert apr√®s 15s"
echo "     ‚úÖ Version en bas de page correspond √† VERSION"
echo "     ‚úÖ Modifications r√©centes sont visibles"
echo ""
echo "üí° Pour vider manuellement les caches:"
echo "   php bin/clear-cache.php"
echo ""
echo "=========================================="

