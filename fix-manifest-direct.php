<?php
/**
 * Script de correction directe du conflit manifest.json
 * √Ä ex√©cuter sur le serveur
 */

echo "üîß CORRECTION DIRECTE DU CONFLIT MANIFEST.JSON\n";
echo "==============================================\n";

$file = 'public/index.php';

if (!file_exists($file)) {
    echo "‚ùå Fichier $file non trouv√©\n";
    exit(1);
}

echo "üìã Lecture du fichier...\n";
$content = file_get_contents($file);

echo "üîç Recherche des routes manifest.json...\n";
$lines = explode("\n", $content);
$manifestRoutes = [];
$inManifestRoute = false;
$routeStartLine = 0;

foreach ($lines as $i => $line) {
    if (strpos($line, "manifest.json") !== false && strpos($line, '$group->get') !== false) {
        $manifestRoutes[] = $i;
        echo "   Route manifest.json trouv√©e ligne " . ($i + 1) . "\n";
    }
}

if (count($manifestRoutes) <= 1) {
    echo "‚úÖ Pas de conflit d√©tect√©\n";
    exit(0);
}

echo "‚ùå Conflit d√©tect√©: " . count($manifestRoutes) . " routes manifest.json\n";

// Sauvegarder
$backup = $file . '.backup.' . date('Y-m-d-H-i-s');
copy($file, $backup);
echo "‚úÖ Sauvegarde cr√©√©e: $backup\n";

// Supprimer la deuxi√®me occurrence (g√©n√©ralement la route TEST)
echo "üîß Suppression de la route dupliqu√©e...\n";

$newContent = $content;
$pattern = '/\s*\/\/ ====================================================================\s*\/\/ Fichiers statiques TEST.*?\$group->get\(\'\/manifest\.json\', function \(Request \$request, Response \$response\) \{\s*\$manifestPath = __DIR__ \. \'\/manifest\.json\';\s*if \(file_exists\(\$manifestPath\)\) \{\s*\$response->getBody\(\)->write\(file_get_contents\(\$manifestPath\)\);\s*return \$response->withHeader\(\'Content-Type\', \'application\/json\'\);\s*\}\s*return \$response->withStatus\(404\);\s*\}\);\s*/s';

$replacement = "\n    // ====================================================================\n    // Fichiers statiques TEST (fallback si serveur web ne les sert pas)\n    // ====================================================================\n    // Note: manifest.json g√©r√© par le groupe PROD pour √©viter les conflits de routes\n    \n";

$newContent = preg_replace($pattern, $replacement, $newContent);

if ($newContent !== $content) {
    file_put_contents($file, $newContent);
    echo "‚úÖ Route dupliqu√©e supprim√©e\n";
    
    // V√©rifier
    $newCount = substr_count($newContent, "manifest.json");
    echo "   Routes manifest.json restantes: $newCount\n";
} else {
    echo "‚ùå Aucune modification effectu√©e\n";
    exit(1);
}

echo "\nüßπ Nettoyage du cache DI...\n";
if (is_dir('var/cache/di')) {
    $files = glob('var/cache/di/*');
    foreach ($files as $file) {
        unlink($file);
    }
    echo "‚úÖ Cache nettoy√©: " . count($files) . " fichier(s)\n";
}

echo "\nüß™ Test de l'application...\n";
try {
    require_once 'vendor/autoload.php';
    echo "‚úÖ Autoloader charg√©\n";
    
    // Test simple du container
    $container = require 'config/container.php';
    echo "‚úÖ Container charg√©\n";
    
    echo "‚úÖ Application fonctionnelle - pas de conflit de routes\n";
} catch (Exception $e) {
    echo "‚ùå Erreur: " . $e->getMessage() . "\n";
    echo "üîÑ Restauration de la sauvegarde...\n";
    copy($backup, $file);
    echo "‚úÖ Fichier restaur√© depuis $backup\n";
    exit(1);
}

echo "\nüéØ CORRECTION TERMIN√âE AVEC SUCC√àS !\n";
echo "üåê Testez votre site: https://iot.olution.info/ffp3/\n";
?>
