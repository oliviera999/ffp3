<!DOCTYPE HTML>
<!--
    olution iot datas by HTML5 UP (version twig)
    Identique visuellement au template legacy. Toute logique PHP a été
    migrée dans App\Controller\AquaponieController.
-->
<html>
    <head>
        <title>n3 iot datas</title>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
        <meta name="theme-color" content="#008B74" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
        <!-- <meta http-equiv="refresh" content="60"/> -->
        <link rel="stylesheet" href="https://iot.olution.info/assets/css/main.css" />
        <noscript><link rel="stylesheet" href="https://iot.olution.info/assets/css/noscript.css" /></noscript>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
        <link rel="stylesheet" href="/ffp3/assets/css/realtime-styles.css" />
        <link rel="shortcut icon" type="image/png" href="https://iot.olution.info/images/favico.png"/>
        <link rel="manifest" href="/ffp3/manifest.json" />
        <link rel="apple-touch-icon" href="/ffp3/assets/icons/icon-192.png" />
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.43/moment-timezone-with-data.min.js"></script>
        <script src="https://code.highcharts.com/stock/highstock.js"></script>
        <script src="https://code.highcharts.com/modules/boost.js"></script>
        <script src="https://code.highcharts.com/modules/exporting.js"></script>
        <script src="https://code.highcharts.com/modules/export-data.js"></script>
        <script src="https://code.highcharts.com/modules/accessibility.js"></script>
        
        <style>
            /* =================================================================
               HEADER MODERNE ET HERO SECTION
            ================================================================= */
            .modern-header {
                background: linear-gradient(135deg, #008B74 0%, #00B794 50%, #008B74 100%);
                color: white;
                padding: 50px 0;
                margin: -20px -20px 50px -20px;
                position: relative;
                overflow: hidden;
            }
            
            .modern-header::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
                opacity: 0.3;
            }
            
            .header-content {
                position: relative;
                z-index: 2;
                text-align: center;
                max-width: 1200px;
                margin: 0 auto;
                padding: 0 20px;
            }
            
            .header-title {
                font-size: 3.5em;
                font-weight: bold;
                margin: 0 0 15px 0;
                text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 20px;
            }
            
            .header-title i {
                font-size: 0.8em;
                animation: float 3s ease-in-out infinite;
            }
            
            @keyframes float {
                0%, 100% { transform: translateY(0px); }
                50% { transform: translateY(-10px); }
            }
            
            .header-subtitle {
                font-size: 1.3em;
                margin: 0 0 30px 0;
                opacity: 0.9;
                font-weight: 300;
                line-height: 1.6;
            }
            
            .system-status-badge {
                display: inline-flex;
                align-items: center;
                gap: 8px;
                background: rgba(255,255,255,0.2);
                padding: 12px 24px;
                border-radius: 25px;
                font-weight: 500;
                backdrop-filter: blur(10px);
                border: 1px solid rgba(255,255,255,0.3);
                margin: 0 10px 20px 10px;
                transition: all 0.3s ease;
            }
            
            .system-status-badge:hover {
                background: rgba(255,255,255,0.3);
                transform: translateY(-2px);
            }
            
            .system-status-badge i {
                font-size: 1.2em;
                animation: pulse 2s infinite;
            }
            
            .quick-stats {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                gap: 20px;
                margin-top: 30px;
                max-width: 800px;
                margin-left: auto;
                margin-right: auto;
            }
            
            .quick-stat {
                background: rgba(255,255,255,0.15);
                padding: 20px;
                border-radius: 15px;
                text-align: center;
                backdrop-filter: blur(10px);
                border: 1px solid rgba(255,255,255,0.2);
                transition: all 0.3s ease;
            }
            
            .quick-stat:hover {
                background: rgba(255,255,255,0.25);
                transform: translateY(-5px);
            }
            
            .quick-stat-value {
                font-size: 2em;
                font-weight: bold;
                margin: 5px 0;
                display: block;
            }
            
            .quick-stat-label {
                font-size: 0.9em;
                opacity: 0.9;
                text-transform: uppercase;
                letter-spacing: 1px;
            }
            
            .quick-stat-icon {
                font-size: 1.5em;
                margin-bottom: 10px;
                opacity: 0.8;
            }
            
            /* =================================================================
               CARTES DE STATISTIQUES AMÉLIORÉES
            ================================================================= */
            .stats-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
                gap: 25px;
                margin: 30px 0;
            }
            
            .stat-card {
                background: white;
                border-radius: 16px;
                padding: 25px;
                box-shadow: 0 4px 20px rgba(0,139,116,0.1);
                text-align: center;
                transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                border: 1px solid rgba(0,139,116,0.08);
                position: relative;
                overflow: hidden;
            }
            
            .stat-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, #008B74, #00B794);
                transform: scaleX(0);
                transition: transform 0.3s ease;
            }
            
            .stat-card:hover {
                transform: translateY(-8px) scale(1.02);
                box-shadow: 0 12px 40px rgba(0,139,116,0.2);
            }
            
            .stat-card:hover::before {
                transform: scaleX(1);
            }
            
            .stat-card-icon {
                font-size: 3em;
                margin-bottom: 15px;
                display: block;
                transition: all 0.3s ease;
            }
            
            .stat-card:hover .stat-card-icon {
                transform: scale(1.1);
            }
            
            .stat-card-value {
                font-size: 2.5em;
                font-weight: bold;
                color: #2c3e50;
                margin: 15px 0;
                line-height: 1;
            }
            
            .stat-card-label {
                font-size: 1em;
                color: #7f8c8d;
                text-transform: uppercase;
                letter-spacing: 1.5px;
                font-weight: 600;
                margin-bottom: 15px;
            }
            
            .stat-card-unit {
                font-size: 0.7em;
                color: #95a5a6;
                font-weight: 400;
            }
            
            /* Progress bars modernes avec animations */
            .progress-bar-container {
                width: 100%;
                height: 10px;
                background: #f8f9fa;
                border-radius: 8px;
                overflow: hidden;
                margin: 15px 0;
                position: relative;
            }
            
            .progress-bar {
                height: 100%;
                background: linear-gradient(90deg, #008B74, #00B794);
                border-radius: 8px;
                transition: width 0.8s cubic-bezier(0.4, 0, 0.2, 1);
                position: relative;
            }
            
            .progress-bar::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
                animation: shimmer 2s infinite;
            }
            
            @keyframes shimmer {
                0% { transform: translateX(-100%); }
                100% { transform: translateX(100%); }
            }
            
            /* Couleurs par type de capteur - Palette moderne */
            .stat-card.water { 
                border-left: 5px solid #008B74;
                background: linear-gradient(180deg, #ffffff 0%, #f0faf8 100%);
            }
            .stat-card.water .stat-card-icon { color: #008B74; }
            .stat-card.water .progress-bar { 
                background: linear-gradient(90deg, #008B74, #00B794) !important; 
            }
            
            .stat-card.temp { 
                border-left: 5px solid #e74c3c;
                background: linear-gradient(180deg, #ffffff 0%, #fef5f1 100%);
            }
            .stat-card.temp .stat-card-icon { color: #e74c3c; }
            .stat-card.temp .progress-bar { 
                background: linear-gradient(90deg, #e74c3c, #ff6b6b) !important; 
            }
            
            .stat-card.humidity { 
                border-left: 5px solid #3498db;
                background: linear-gradient(180deg, #ffffff 0%, #f4f8fb 100%);
            }
            .stat-card.humidity .stat-card-icon { color: #3498db; }
            .stat-card.humidity .progress-bar { 
                background: linear-gradient(90deg, #3498db, #5dade2) !important; 
            }
            
            .stat-card.light { 
                border-left: 5px solid #f39c12;
                background: linear-gradient(180deg, #ffffff 0%, #fef9f3 100%);
            }
            .stat-card.light .stat-card-icon { color: #f39c12; }
            .stat-card.light .progress-bar { 
                background: linear-gradient(90deg, #f39c12, #f1c40f) !important; 
            }
            
            /* =================================================================
               SECTION HEADERS MODERNES
            ================================================================= */
            .section-header {
                display: flex !important;
                align-items: center !important;
                gap: 20px !important;
                margin: 50px 0 30px 0 !important;
                padding: 20px 0 !important;
                border-bottom: 3px solid #008B74 !important;
                position: relative;
            }
            
            .section-header::after {
                content: '';
                position: absolute;
                bottom: -3px;
                left: 0;
                width: 60px;
                height: 3px;
                background: #00B794;
                border-radius: 2px;
            }
            
            .section-header h3 {
                margin: 0 !important;
                color: #008B74 !important;
                font-size: 1.8em !important;
                font-weight: 700 !important;
                text-transform: uppercase !important;
                letter-spacing: 1px !important;
            }
            
            .section-header i {
                font-size: 2em !important;
                color: #008B74 !important;
                display: inline-block !important;
                padding: 10px;
                background: rgba(0,139,116,0.1);
                border-radius: 12px;
                transition: all 0.3s ease;
            }
            
            .section-header:hover i {
                background: rgba(0,139,116,0.2);
                transform: scale(1.1);
            }
            
            /* =================================================================
               RESPONSIVE DESIGN
            ================================================================= */
            @media (max-width: 768px) {
                .header-title {
                    font-size: 2.5em;
                    flex-direction: column;
                    gap: 10px;
                }
                
                .header-subtitle {
                    font-size: 1.1em;
                }
                
                .quick-stats {
                    grid-template-columns: repeat(2, 1fr);
                    gap: 15px;
                }
                
                .stats-grid {
                    grid-template-columns: 1fr;
                    gap: 20px;
                }
                
                .section-header {
                    flex-direction: column;
                    text-align: center;
                    gap: 15px;
                }
            }
            
            @media (max-width: 480px) {
                .modern-header {
                    padding: 30px 0;
                    margin: -20px -10px 30px -10px;
                }
                
                .quick-stats {
                    grid-template-columns: 1fr;
                }
                
                .system-status-badge {
                    margin: 0 5px 15px 5px;
                    padding: 10px 20px;
                    font-size: 0.9em;
                }
            }
            
            /* Titres de graphiques */
            .chart-container-title {
                font-size: 1.2em;
                font-weight: bold;
                color: #2c3e50;
                margin: 20px 0 10px 0;
                padding-left: 10px;
                border-left: 4px solid #008B74;
            }
        </style>
    </head>
    <body class="is-preload">
        <!-- Wrapper -->
        <div id="wrapper" class="fade-in">
            <!-- Header -->
            <header id="header">
                <a href="https://iot.olution.info/ffp3/" class="logo">n3 iot datas</a>
            </header>

            <!-- Nav -->
            <nav id="nav">
                <ul class="links">
                    <li><a href="https://iot.olution.info/ffp3/">Accueil</a></li>
                    <li class="active"><a href="https://iot.olution.info/ffp3/aquaponie{{ environment == 'test' ? '-test' : '' }}">L'aquaponie (FFP3)</a></li>
                    <li><a href="https://iot.olution.info/msp1/msp1datas/msp1-data.php">Le potager</a></li>
                    <li><a href="https://iot.olution.info/n3pp/n3ppdatas/n3pp-data.php">L'élevage d'insectes</a></li>
                </ul>
                <ul class="icons">
                    <li><a href="https://olution.info/course/view.php?id=511" class="icon solid fa-leaf"><span class="label">olution</span></a></li>
                    <li><a href="https://farmflow.marout.org/" class="icon solid fa-fish"><span class="label">farmflow</span></a></li>
                </ul>
            </nav>

            <!-- Main -->
            <div id="main">
                <!-- Modern Header Hero Section -->
                <div class="modern-header">
                    <div class="header-content">
                        <div class="header-title">
                            <i class="fas fa-fish"></i>
                            Système Aquaponie FFP3
                            <i class="fas fa-fish"></i>
                        </div>
                        <div class="header-subtitle">
                            Surveillance intelligente et contrôle automatisé de votre écosystème aquaponique
                        </div>
                        
                        <!-- Badges de statut système -->
                        <div class="system-status-badge">
                            <i class="fas fa-circle"></i>
                            <span>Environnement: {{ environment|upper }}</span>
                        </div>
                        <div class="system-status-badge">
                            <i class="fas fa-microchip"></i>
                            <span>Version: {{ version }}</span>
                        </div>
                        {% if firmware_version %}
                        <div class="system-status-badge">
                            <i class="fas fa-code"></i>
                            <span>Firmware: {{ firmware_version }}</span>
                        </div>
                        {% endif %}
                        
                        <!-- Statistiques rapides -->
                        <div class="quick-stats">
                            <div class="quick-stat">
                                <i class="fas fa-database quick-stat-icon"></i>
                                <span class="quick-stat-value">{{ measure_count }}</span>
                                <span class="quick-stat-label">Mesures</span>
                            </div>
                            <div class="quick-stat">
                                <i class="fas fa-clock quick-stat-icon"></i>
                                <span class="quick-stat-value">{{ duration_str|split(',')[0]|trim }}</span>
                                <span class="quick-stat-label">Période</span>
                            </div>
                            <div class="quick-stat">
                                <i class="fas fa-calendar quick-stat-icon"></i>
                                <span class="quick-stat-value">{{ timepastbegin }}</span>
                                <span class="quick-stat-label">Jours actifs</span>
                            </div>
                            <div class="quick-stat">
                                <i class="fas fa-thermometer-half quick-stat-icon"></i>
                                <span class="quick-stat-value">{{ last_reading_tempair|default(0)|round(1) }}°C</span>
                                <span class="quick-stat-label">Température</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Featured Post -->
                <article class="post featured">
                    <header class="major">
                        <h2>
                            <i class="icon solid fa-chart-line"></i>
                            Données en temps réel
                        </h2>
                        <p>Le système est suivi grâce à la carte de développement ESP-32 qui mesure et présente différents paramètres du système. De nombreux capteurs permettent d'automatiser le fonctionnement du système pendant une période de plus d'un mois. Les données sont transmises sur le serveur d'olution et traitées pour être présentées. Le système est également contrôlable manuellement à distance. Ce prototype est issu du projet <a href="https://farmflow.marout.org">farmflow</a>. On vous invite à le découvrir ainsi que l'aquaponie en général.</p>
                        <hr />
                    </header>

                    <h2>📊 Synthèse des mesures du <span id="summary-start-date">{{ start_date|date('d/m/Y H:i:s') }}</span> au <span id="summary-end-date">{{ end_date|date('d/m/Y H:i:s') }}</span></h2>

                    <!-- Section Niveaux d'eau -->
                    <div class="section-header">
                        <i class="fas fa-tint"></i>
                        <h3>Niveaux d'eau</h3>
                    </div>
                    
                    <div class="stats-grid">
                        <!-- Aquarium -->
                        <div class="stat-card water">
                            <i class="fas fa-fish stat-card-icon"></i>
                            <div class="stat-card-label">Aquarium</div>
                            <div class="stat-card-value" id="eauaqua-display">{{ last_reading_eauaqua|default(0)|round(0) }} <span class="stat-card-unit">cm</span></div>
                            <div class="progress-bar-container">
                                <div class="progress-bar" id="eauaqua-progress" style="width: {{ (last_reading_eauaqua|default(0) / 100 * 100)|round(0) }}%;"></div>
                            </div>
                            <div style="font-size: 0.75em; color: #7f8c8d; margin-top: 8px; line-height: 1.4;">
                                <div>Moy: <span id="eauaqua-avg">{{ avg_eauaqua|default(0)|round(1) }}</span> cm | ET: <span id="eauaqua-stddev">{{ stddev_eauaqua|default(0)|round(2) }}</span></div>
                                <div>Min: <span id="eauaqua-min">{{ min_eauaqua|default(0) }}</span> cm | Max: <span id="eauaqua-max">{{ max_eauaqua|default(0) }}</span> cm</div>
                            </div>
                        </div>
                        
                        <!-- Réserve -->
                        <div class="stat-card water">
                            <i class="fas fa-droplet stat-card-icon"></i>
                            <div class="stat-card-label">Réserve</div>
                            <div class="stat-card-value" id="eaureserve-display">{{ last_reading_eaureserve|default(0)|round(0) }} <span class="stat-card-unit">cm</span></div>
                            <div class="progress-bar-container">
                                <div class="progress-bar" id="eaureserve-progress" style="width: {{ (last_reading_eaureserve|default(0) / 100 * 100)|round(0) }}%;"></div>
                            </div>
                            <div style="font-size: 0.75em; color: #7f8c8d; margin-top: 8px; line-height: 1.4;">
                                <div>Moy: <span id="eaureserve-avg">{{ avg_eaureserve|default(0)|round(1) }}</span> cm | ET: <span id="eaureserve-stddev">{{ stddev_eaureserve|default(0)|round(2) }}</span></div>
                                <div>Min: <span id="eaureserve-min">{{ min_eaureserve|default(0) }}</span> cm | Max: <span id="eaureserve-max">{{ max_eaureserve|default(0) }}</span> cm</div>
                            </div>
                        </div>
                        
                        <!-- Potager -->
                        <div class="stat-card water">
                            <i class="fas fa-seedling stat-card-icon"></i>
                            <div class="stat-card-label">Potager</div>
                            <div class="stat-card-value" id="eaupota-display">{{ last_reading_eaupota|default(0)|round(0) }} <span class="stat-card-unit">cm</span></div>
                            <div class="progress-bar-container">
                                <div class="progress-bar" id="eaupota-progress" style="width: {{ (last_reading_eaupota|default(0) / 100 * 100)|round(0) }}%;"></div>
                            </div>
                            <div style="font-size: 0.75em; color: #7f8c8d; margin-top: 8px; line-height: 1.4;">
                                <div>Moy: <span id="eaupota-avg">{{ avg_eaupota|default(0)|round(1) }}</span> cm | ET: <span id="eaupota-stddev">{{ stddev_eaupota|default(0)|round(2) }}</span></div>
                                <div>Min: <span id="eaupota-min">{{ min_eaupota|default(0) }}</span> cm | Max: <span id="eaupota-max">{{ max_eaupota|default(0) }}</span> cm</div>
                            </div>
                    </div>
                </div>

                    <!-- Section Paramètres physiques -->
                    <div class="section-header">
                        <i class="fas fa-thermometer-half"></i>
                        <h3>Paramètres physiques</h3>
                    </div>
                    
                    <div class="stats-grid">
                        <!-- Température eau -->
                        <div class="stat-card temp">
                            <i class="fas fa-water stat-card-icon"></i>
                            <div class="stat-card-label">Température eau</div>
                            <div class="stat-card-value" id="tempeau-display">{{ last_reading_tempeau|default(0)|round(1) }} <span class="stat-card-unit">°C</span></div>
                            <div class="progress-bar-container">
                                <div class="progress-bar" id="tempeau-progress" style="width: {{ (last_reading_tempeau|default(0) / 40 * 100)|round(0) }}%;"></div>
                            </div>
                            <div style="font-size: 0.75em; color: #7f8c8d; margin-top: 8px; line-height: 1.4;">
                                <div>Moy: <span id="tempeau-avg">{{ avg_tempeau|default(0)|round(1) }}</span> °C | ET: <span id="tempeau-stddev">{{ stddev_tempeau|default(0)|round(2) }}</span></div>
                                <div>Min: <span id="tempeau-min">{{ min_tempeau|default(0) }}</span> °C | Max: <span id="tempeau-max">{{ max_tempeau|default(0) }}</span> °C</div>
                            </div>
                        </div>
                        
                        <!-- Température air -->
                        <div class="stat-card temp">
                            <i class="fas fa-temperature-high stat-card-icon"></i>
                            <div class="stat-card-label">Température air</div>
                            <div class="stat-card-value" id="tempair-display">{{ last_reading_tempair|default(0)|round(1) }} <span class="stat-card-unit">°C</span></div>
                            <div class="progress-bar-container">
                                <div class="progress-bar" id="tempair-progress" style="width: {{ (last_reading_tempair|default(0) / 40 * 100)|round(0) }}%;"></div>
                            </div>
                            <div style="font-size: 0.75em; color: #7f8c8d; margin-top: 8px; line-height: 1.4;">
                                <div>Moy: <span id="tempair-avg">{{ avg_tempair|default(0)|round(1) }}</span> °C | ET: <span id="tempair-stddev">{{ stddev_tempair|default(0)|round(2) }}</span></div>
                                <div>Min: <span id="tempair-min">{{ min_tempair|default(0) }}</span> °C | Max: <span id="tempair-max">{{ max_tempair|default(0) }}</span> °C</div>
                            </div>
                        </div>
                        
                        <!-- Humidité -->
                        <div class="stat-card humidity">
                            <i class="fas fa-droplet stat-card-icon"></i>
                            <div class="stat-card-label">Humidité</div>
                            <div class="stat-card-value" id="humi-display">{{ last_reading_humi|default(0)|round(1) }} <span class="stat-card-unit">%</span></div>
                            <div class="progress-bar-container">
                                <div class="progress-bar" id="humi-progress" style="width: {{ last_reading_humi|default(0) }}%;"></div>
                            </div>
                            <div style="font-size: 0.75em; color: #7f8c8d; margin-top: 8px; line-height: 1.4;">
                                <div>Moy: <span id="humi-avg">{{ avg_humi|default(0)|round(1) }}</span> % | ET: <span id="humi-stddev">{{ stddev_humi|default(0)|round(2) }}</span></div>
                                <div>Min: <span id="humi-min">{{ min_humi|default(0) }}</span> % | Max: <span id="humi-max">{{ max_humi|default(0) }}</span> %</div>
                            </div>
                        </div>
                        
                        <!-- Luminosité -->
                        <div class="stat-card light">
                            <i class="fas fa-lightbulb stat-card-icon"></i>
                            <div class="stat-card-label">Luminosité</div>
                            <div class="stat-card-value" id="lumi-display">{{ last_reading_lumi|default(0)|round(0) }} <span class="stat-card-unit">UA</span></div>
                            <div class="progress-bar-container">
                                <div class="progress-bar" id="lumi-progress" style="width: {{ (last_reading_lumi|default(0) / 4000 * 100)|round(0) }}%;"></div>
                            </div>
                            <div style="font-size: 0.75em; color: #7f8c8d; margin-top: 8px; line-height: 1.4;">
                                <div>Moy: <span id="lumi-avg">{{ avg_lumi|default(0)|round(0) }}</span> UA | ET: <span id="lumi-stddev">{{ stddev_lumi|default(0)|round(2) }}</span></div>
                                <div>Min: <span id="lumi-min">{{ min_lumi|default(0) }}</span> UA | Max: <span id="lumi-max">{{ max_lumi|default(0) }}</span> UA</div>
                            </div>
                        </div>
                    </div>

                    <!-- Section Bilan Hydrique -->
                    <div class="section-header">
                        <i class="fas fa-water"></i>
                        <h3>Bilan Hydrique</h3>
                    </div>

                    <style>
                        .water-balance-grid {
                            display: grid;
                            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
                            gap: 20px;
                            margin: 20px 0;
                        }
                        
                        .balance-card {
                            background: white;
                            border-radius: 12px;
                            padding: 20px;
                            box-shadow: 0 2px 8px rgba(0,139,116,0.15);
                            transition: transform 0.2s, box-shadow 0.2s;
                            border: 1px solid rgba(0,139,116,0.1);
                        }
                        
                        .balance-card:hover {
                            transform: translateY(-4px);
                            box-shadow: 0 6px 16px rgba(0,139,116,0.25);
                        }
                        
                        .balance-card.reserve { 
                            border-top: 4px solid #008B74;
                        }
                        
                        .balance-card.aquarium { 
                            border-top: 4px solid #FF6300;
                        }
                        
                        .balance-card-header {
                            display: flex;
                            align-items: center;
                            gap: 12px;
                            margin-bottom: 15px;
                            padding-bottom: 12px;
                            border-bottom: 2px solid #f0f0f0;
                        }
                        
                        .balance-card-icon {
                            font-size: 2em;
                            color: #008B74;
                        }
                        
                        .balance-card.aquarium .balance-card-icon {
                            color: #FF6300;
                        }
                        
                        .balance-card-title {
                            font-size: 1.1em;
                            font-weight: bold;
                            color: #2c3e50;
                            margin: 0;
                        }
                        
                        .balance-stat {
                            display: flex;
                            justify-content: space-between;
                            align-items: center;
                            padding: 10px 0;
                            border-bottom: 1px solid #f5f5f5;
                        }
                        
                        .balance-stat:last-child {
                            border-bottom: none;
                        }
                        
                        .balance-stat-label {
                            font-size: 0.9em;
                            color: #7f8c8d;
                            display: flex;
                            align-items: center;
                            gap: 8px;
                        }
                        
                        .balance-stat-value {
                            font-size: 1.2em;
                            font-weight: bold;
                            color: #2c3e50;
                        }
                        
                        .balance-stat-value.positive {
                            color: #27ae60;
                        }
                        
                        .balance-stat-value.negative {
                            color: #e74c3c;
                        }
                        
                        .balance-stat-value.neutral {
                            color: #3498db;
                        }
                        
                        .balance-stat-unit {
                            font-size: 0.8em;
                            color: #95a5a6;
                            margin-left: 4px;
                        }
                        
                        .balance-note {
                            margin-top: 15px;
                            padding: 12px;
                            background: #f8f9fa;
                            border-radius: 8px;
                            font-size: 0.85em;
                            color: #6c757d;
                            line-height: 1.5;
                        }
                        
                        .balance-note i {
                            color: #008B74;
                            margin-right: 6px;
                        }

                        @media (max-width: 768px) {
                            .water-balance-grid {
                                grid-template-columns: 1fr;
                            }
                        }
                    </style>

                    <div class="water-balance-grid">
                        <!-- Carte Réserve -->
                        <div class="balance-card reserve">
                            <div class="balance-card-header">
                                <i class="fas fa-droplet balance-card-icon"></i>
                                <h4 class="balance-card-title">Réserve d'eau</h4>
                            </div>
                            
                            <div class="balance-stat">
                                <span class="balance-stat-label">
                                    <i class="fas fa-arrow-down" style="color: #e74c3c;"></i>
                                    Consommation totale
                                </span>
                                <span class="balance-stat-value negative">
                                    {{ reserve_consumption|default(0)|round(1) }}
                                    <span class="balance-stat-unit">cm</span>
                                </span>
                            </div>
                            
                            <div class="balance-stat">
                                <span class="balance-stat-label">
                                    <i class="fas fa-arrow-up" style="color: #27ae60;"></i>
                                    Ravitaillement total
                                </span>
                                <span class="balance-stat-value positive">
                                    {{ reserve_refill|default(0)|round(1) }}
                                    <span class="balance-stat-unit">cm</span>
                                </span>
                            </div>
                            
                            <div class="balance-stat">
                                <span class="balance-stat-label">
                                    <i class="fas fa-balance-scale" style="color: #3498db;"></i>
                                    Bilan net
                                </span>
                                <span class="balance-stat-value {% if reserve_balance|default(0) > 0 %}positive{% elseif reserve_balance|default(0) < 0 %}negative{% else %}neutral{% endif %}">
                                    {% if reserve_balance|default(0) > 0 %}+{% endif %}{{ reserve_balance|default(0)|round(1) }}
                                    <span class="balance-stat-unit">cm</span>
                                </span>
                            </div>
                            
                            <div class="balance-note">
                                <i class="fas fa-info-circle"></i>
                                <strong>Note :</strong> Les variations ≤ 1 cm sont considérées comme des incertitudes de mesure et ne sont pas prises en compte.
                            </div>
                        </div>
                        
                        <!-- Carte Aquarium - Marées -->
                        <div class="balance-card aquarium">
                            <div class="balance-card-header">
                                <i class="fas fa-water balance-card-icon"></i>
                                <h4 class="balance-card-title">Cycles de marée</h4>
                            </div>
                            
                            <div class="balance-stat">
                                <span class="balance-stat-label">
                                    <i class="fas fa-arrows-alt-v"></i>
                                    Marnage moyen
                                </span>
                                <span class="balance-stat-value neutral">
                                    {{ tide_marnage|default(0)|round(2) }}
                                    <span class="balance-stat-unit">cm</span>
                                    {% if tide_marnage_stddev is not null %}
                                        <span style="font-size: 0.7em; color: #95a5a6;">
                                            ± {{ tide_marnage_stddev|round(2) }}
                                        </span>
                                    {% endif %}
                                </span>
                            </div>
                            
                            <div class="balance-stat">
                                <span class="balance-stat-label">
                                    <i class="fas fa-clock"></i>
                                    Fréquence des marées
                                </span>
                                <span class="balance-stat-value neutral">
                                    {{ tide_frequency|default(0)|round(2) }}
                                    <span class="balance-stat-unit">/heure</span>
                                    {% if tide_frequency_stddev is not null %}
                                        <span style="font-size: 0.7em; color: #95a5a6;">
                                            ± {{ tide_frequency_stddev|round(2) }}
                                        </span>
                                    {% endif %}
                                </span>
                            </div>
                            
                            <div class="balance-stat">
                                <span class="balance-stat-label">
                                    <i class="fas fa-repeat"></i>
                                    Nombre de cycles
                                </span>
                                <span class="balance-stat-value neutral">
                                    {{ tide_cycles|default(0) }}
                                </span>
                            </div>
                            
                            <div class="balance-stat">
                                <span class="balance-stat-label">
                                    <i class="fas fa-chart-line"></i>
                                    Consommation moyenne
                                </span>
                                <span class="balance-stat-value neutral">
                                    {{ aquarium_consumption|default(0)|round(2) }}
                                    <span class="balance-stat-unit">cm</span>
                                </span>
                            </div>
                        </div>
                    </div>

                    <hr />

                    <!-- Graphiques Stock Navigator + Aires colorées -->
                    <h3 class="chart-container-title">📊 Niveaux d'eau</h3>
                    <div id="chart-stock-area-eau-D" class="container"></div>
                    
                    <h3 class="chart-container-title">🌡️ Paramètres physiques</h3>
                    <div id="chart-stock-area-temp-D" class="container"></div>
                    
                    <hr />

                    {# --------------------------------------------------------------------- #}
                    {# FORMULAIRE DE FILTRAGE MODERNE ET ERGONOMIQUE                              #}
                    {# --------------------------------------------------------------------- #}

                    <style>
                        .filter-section {
                            background: white;
                            border-radius: 16px;
                            padding: 30px;
                            margin: 30px auto;
                            max-width: 900px;
                            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
                            border-top: 5px solid #007E61;
                        }
                        
                        .filter-header {
                            display: flex;
                            align-items: center;
                            gap: 15px;
                            margin-bottom: 25px;
                            padding-bottom: 15px;
                            border-bottom: 2px solid #f0f0f0;
                        }
                        
                        .filter-header h3 {
                            margin: 0;
                            color: #007E61;
                            font-size: 1.5em;
                        }
                        
                        .filter-header i {
                            font-size: 1.8em;
                            color: #007E61;
                        }
                        
                        .period-info {
                            background: linear-gradient(135deg, #007E61 0%, #00B794 100%);
                            color: white;
                            padding: 20px;
                            border-radius: 12px;
                            margin-bottom: 25px;
                            text-align: center;
                        }
                        
                        .period-info-title {
                            font-size: 0.9em;
                            opacity: 0.9;
                            margin-bottom: 10px;
                            text-transform: uppercase;
                            letter-spacing: 1px;
                            display: flex;
                            align-items: center;
                            gap: 12px;
                            flex-wrap: wrap;
                        }
                        
                        .mode-badge {
                            display: inline-flex;
                            align-items: center;
                            gap: 6px;
                            padding: 4px 12px;
                            border-radius: 20px;
                            font-size: 0.75em;
                            font-weight: bold;
                            letter-spacing: 1px;
                            animation: fadeIn 0.3s ease-in;
                        }
                        
                        .mode-badge-live {
                            background: linear-gradient(135deg, #e74c3c, #c0392b);
                            color: white;
                            box-shadow: 0 2px 8px rgba(231, 76, 60, 0.4);
                        }
                        
                        .mode-badge-live i {
                            animation: pulse 1.5s ease-in-out infinite;
                        }
                        
                        .mode-badge-historical {
                            background: linear-gradient(135deg, #95a5a6, #7f8c8d);
                            color: white;
                            box-shadow: 0 2px 8px rgba(149, 165, 166, 0.3);
                        }
                        
                        @keyframes pulse {
                            0%, 100% { opacity: 1; }
                            50% { opacity: 0.5; }
                        }
                        
                        @keyframes fadeIn {
                            from { opacity: 0; transform: scale(0.8); }
                            to { opacity: 1; transform: scale(1); }
                        }
                        
                        .period-info-dates {
                            font-size: 1.3em;
                            font-weight: bold;
                            margin-bottom: 15px;
                        }
                        
                        .period-info-stats {
                            display: grid;
                            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                            gap: 15px;
                            margin-top: 15px;
                            padding-top: 15px;
                            border-top: 1px solid rgba(255,255,255,0.3);
                        }
                        
                        .period-stat-item {
                            text-align: center;
                        }
                        
                        .period-stat-value {
                            font-size: 1.4em;
                            font-weight: bold;
                            display: block;
                        }
                        
                        .period-stat-label {
                            font-size: 0.85em;
                            opacity: 0.9;
                            margin-top: 5px;
                        }
                        
                        .quick-filters {
                            display: grid;
                            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
                            gap: 12px;
                            margin-bottom: 30px;
                        }
                        
                        .quick-filter-btn {
                            padding: 12px 20px;
                            background: white;
                            color: #007E61;
                            border: 2px solid #007E61;
                            border-radius: 8px;
                            cursor: pointer;
                            transition: all 0.3s;
                            font-weight: 500;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            gap: 8px;
                        }
                        
                        .quick-filter-btn:hover {
                            background: #007E61;
                            color: white;
                            transform: translateY(-2px);
                            box-shadow: 0 4px 12px rgba(0,126,97,0.3);
                        }
                        
                        .quick-filter-btn i {
                            font-size: 1.1em;
                        }
                        
                        .custom-filter {
                            background: #f8f9fa;
                            padding: 25px;
                            border-radius: 12px;
                            margin-top: 20px;
                        }
                        
                        .custom-filter-title {
                            font-size: 1.1em;
                            color: #2c3e50;
                            margin-bottom: 20px;
                            font-weight: 600;
                            display: flex;
                            align-items: center;
                            gap: 10px;
                        }
                        
                        .datetime-grid {
                            display: grid;
                            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                            gap: 20px;
                            margin-bottom: 20px;
                        }
                        
                        .datetime-field {
                            display: flex;
                            flex-direction: column;
                            gap: 8px;
                        }
                        
                        .datetime-field label {
                            font-weight: 600;
                            color: #2c3e50;
                            font-size: 0.95em;
                            display: flex;
                            align-items: center;
                            gap: 8px;
                        }
                        
                        .datetime-field label i {
                            color: #007E61;
                        }
                        
                        .datetime-field input {
                            padding: 12px 15px;
                            border: 2px solid #e0e0e0;
                            border-radius: 8px;
                            font-size: 1em;
                            transition: all 0.3s;
                            background: white;
                        }
                        
                        .datetime-field input:focus {
                            outline: none;
                            border-color: #007E61;
                            box-shadow: 0 0 0 3px rgba(0,126,97,0.1);
                        }
                        
                        .action-buttons {
                            display: grid;
                            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                            gap: 15px;
                            margin-top: 20px;
                        }
                        
                        .btn-primary {
                            padding: 14px 25px;
                            background: linear-gradient(135deg, #007E61 0%, #00B794 100%);
                            color: white;
                            border: none;
                            border-radius: 8px;
                            cursor: pointer;
                            font-weight: 600;
                            font-size: 1em;
                            transition: all 0.3s;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            gap: 10px;
                        }
                        
                        .btn-primary:hover {
                            transform: translateY(-2px);
                            box-shadow: 0 6px 20px rgba(0,126,97,0.3);
                        }
                        
                        .btn-secondary {
                            padding: 14px 25px;
                            background: white;
                            color: #007E61;
                            border: 2px solid #007E61;
                            border-radius: 8px;
                            cursor: pointer;
                            font-weight: 600;
                            font-size: 1em;
                            transition: all 0.3s;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            gap: 10px;
                        }
                        
                        .btn-secondary:hover {
                            background: #007E61;
                            color: white;
                            transform: translateY(-2px);
                            box-shadow: 0 6px 20px rgba(0,126,97,0.3);
                        }
                        
                        .btn-primary i, .btn-secondary i {
                            font-size: 1.2em;
                        }
                        
                        @media (max-width: 768px) {
                            .filter-section {
                                padding: 20px;
                                margin: 20px 10px;
                            }
                            
                            .quick-filters {
                                grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
                                gap: 8px;
                            }
                            
                            .quick-filter-btn {
                                padding: 10px 15px;
                                font-size: 0.9em;
                            }
                            
                            .datetime-grid {
                                grid-template-columns: 1fr;
                            }
                            
                            .action-buttons {
                                grid-template-columns: 1fr;
                            }
                            
                            .period-info-stats {
                                grid-template-columns: 1fr;
                            }
                        }
                    </style>

                    <div class="filter-section">
                        <!-- En-tête de la section -->
                        <div class="filter-header">
                            <i class="fas fa-filter"></i>
                            <h3>Filtrage des données</h3>
                        </div>

                        <!-- Informations sur la période actuelle -->
                        <div class="period-info">
                            <div class="period-info-title">
                                📊 Période analysée
                                <span id="period-mode-badge" class="mode-badge mode-badge-historical">
                                    <i class="fas fa-history"></i> HISTORIQUE
                                </span>
                            </div>
                            <div class="period-info-dates">
                                <i class="far fa-calendar-alt"></i>
                                Du <span id="period-start-date">{{ start_date|date('d/m/Y H:i') }}</span> au <span id="period-end-date">{{ end_date|date('d/m/Y H:i') }}</span>
                                <small style="opacity: 0.8; font-size: 0.85em;">(heure Casablanca)</small>
                            </div>
                            <div class="period-info-stats">
                                <div class="period-stat-item">
                                    <span class="period-stat-value" id="period-duration">{{ duration_str }}</span>
                                    <span class="period-stat-label">Durée de la fenêtre</span>
                                </div>
                                <div class="period-stat-item">
                                    <span class="period-stat-value" id="period-measure-count">{{ measure_count }}</span>
                                    <span class="period-stat-label">Mesures chargées</span>
                                </div>
                                <div class="period-stat-item">
                                    <span class="period-stat-value" id="live-readings-count">0</span>
                                    <span class="period-stat-label">Lectures live reçues</span>
                                </div>
                                <div class="period-stat-item">
                                    <span class="period-stat-value" id="period-uptime">{{ timepastbegin }}j</span>
                                    <span class="period-stat-label">Fonctionnement total</span>
                                </div>
                            </div>
                        </div>

                        <!-- Filtres rapides -->
                        <div class="quick-filters">
                            <button class="quick-filter-btn" onclick="setPeriod(1, 'hours')">
                                <i class="far fa-clock"></i> 1 heure
                            </button>
                            <button class="quick-filter-btn" onclick="setPeriod(6, 'hours')">
                                <i class="far fa-clock"></i> 6 heures
                            </button>
                            <button class="quick-filter-btn" onclick="setPeriod(1, 'days')">
                                <i class="far fa-calendar"></i> 1 jour
                            </button>
                            <button class="quick-filter-btn" onclick="setPeriod(7, 'days')">
                                <i class="far fa-calendar-alt"></i> 1 semaine
                            </button>
                            <button class="quick-filter-btn" onclick="setPeriod(30, 'days')">
                                <i class="far fa-calendar-alt"></i> 1 mois
                            </button>
                        </div>

                        <!-- Filtre personnalisé -->
                        <div class="custom-filter">
                            <div class="custom-filter-title">
                                <i class="fas fa-calendar-days"></i>
                                Période personnalisée
                            </div>

                            <form method="POST" action="" id="customFilterForm">
                                <div class="datetime-grid">
                                    <div class="datetime-field">
                                        <label for="start_datetime">
                                            <i class="fas fa-play"></i> Date et heure de début
                                        </label>
                                        <input type="datetime-local" 
                                               id="start_datetime" 
                                               name="start_datetime" 
                                               value="{{ start_date|date('Y-m-d\\TH:i') }}" 
                                               required>
                                        <small style="color: #7f8c8d; font-size: 0.85em; margin-top: 4px;">
                                            <i class="fas fa-clock"></i> Heure de Casablanca (serveur: Paris +1h en hiver, égale en été)
                                        </small>
                                    </div>

                                    <div class="datetime-field">
                                        <label for="end_datetime">
                                            <i class="fas fa-stop"></i> Date et heure de fin
                                        </label>
                                        <input type="datetime-local" 
                                               id="end_datetime" 
                                               name="end_datetime" 
                                               value="{{ end_date|date('Y-m-d\\TH:i') }}" 
                                               required>
                                        <small style="color: #7f8c8d; font-size: 0.85em; margin-top: 4px;">
                                            <i class="fas fa-clock"></i> Heure de Casablanca (serveur: Paris +1h en hiver, égale en été)
                                        </small>
                                    </div>
                                </div>

                                <div class="action-buttons">
                                    <button type="submit" class="btn-primary">
                                        <i class="fas fa-chart-line"></i>
                                        Afficher les mesures
                                    </button>
                                    <button type="submit" name="export_csv" class="btn-secondary">
                                        <i class="fas fa-file-csv"></i>
                                        Télécharger CSV
                                    </button>
                                </div>
                            </form>
                        </div>

                        <!-- Informations système -->
                        <div style="text-align: center; margin-top: 20px; padding-top: 20px; border-top: 2px solid #f0f0f0; color: #7f8c8d; font-size: 0.9em;">
                            <i class="fas fa-info-circle"></i>
                            Total disponible : {{ first_reading_begin }} enregistrements | 
                            Premier enregistrement : {{ first_reading_time_begin }}
                        </div>
                    </div>

                    <!-- Panneau d'état du système (temps réel) -->
                    <div class="system-health-panel">
                        <h3>
                            <i class="fas fa-heartbeat"></i>
                            État du système
                            <span class="refresh-spinner" id="health-spinner">
                                <i class="fas fa-sync-alt"></i>
                            </span>
                        </h3>
                        
                        <div class="health-grid">
                            <div class="health-item">
                                <div class="health-item-label">Statut</div>
                                <div id="system-status-indicator" class="status-indicator status-online">
                                    <i class="fas fa-check-circle"></i> En ligne
                                </div>
                            </div>
                            
                            <div class="health-item">
                                <div class="health-item-label">Dernière réception</div>
                                <div class="health-item-value" id="last-reading-time">
                                    <i class="fas fa-spinner fa-spin"></i>
                                </div>
                            </div>
                            
                            <div class="health-item">
                                <div class="health-item-label">Uptime (30j)</div>
                                <div class="health-item-value" id="system-uptime">
                                    <i class="fas fa-spinner fa-spin"></i>
                                </div>
                            </div>
                            
                            <div class="health-item">
                                <div class="health-item-label">Lectures aujourd'hui</div>
                                <div class="health-item-value" id="readings-today">
                                    <i class="fas fa-spinner fa-spin"></i>
                                </div>
                            </div>
                        </div>
                        
                        <div class="next-update-countdown" id="next-update-info">
                            Prochaine mise à jour dans <strong id="countdown-seconds">15</strong> secondes
                        </div>

                        <!-- Contrôles mode live intégrés -->
                        <div class="live-controls-integrated">
                            <div class="live-control-row">
                                <!-- Mode Live ON/OFF -->
                                <div class="live-control-item">
                                    <span class="live-control-label">Mode Live</span>
                                    <label class="live-toggle-switch">
                                        <input type="checkbox" id="live-mode-toggle" checked>
                                        <span class="live-toggle-slider"></span>
                                    </label>
                                </div>
                                
                                <!-- Auto-scroll -->
                                <div class="live-control-item">
                                    <span class="live-control-label">Auto-scroll</span>
                                    <label class="live-toggle-switch">
                                        <input type="checkbox" id="auto-scroll-toggle" checked>
                                        <span class="live-toggle-slider"></span>
                                    </label>
                                </div>
                                
                                <!-- Intervalle de mise à jour -->
                                <div class="live-control-item">
                                    <span class="live-control-label">Intervalle</span>
                                    <select id="update-interval-selector" class="live-interval-selector">
                                        <option value="5000">5s</option>
                                        <option value="10000">10s</option>
                                        <option value="15000" selected>15s</option>
                                        <option value="30000">30s</option>
                                        <option value="60000">60s</option>
                                    </select>
                                </div>
                                
                                <!-- Statistiques -->
                                <div class="live-control-item">
                                    <div class="live-stats-display">
                                        <i class="fas fa-chart-line"></i>
                                        <span id="new-readings-count" class="live-stats-value">0</span>
                                        <span>nouvelles données</span>
                                    </div>
                                </div>
                                
                                <!-- Bouton rafraîchir -->
                                <div class="live-control-item">
                                    <button id="force-refresh-button" class="live-refresh-button">
                                        <i class="fas fa-sync-alt"></i>
                                        Rafraîchir
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <script>
                        function setPeriod(value, unit) {
                            // Utiliser moment-timezone pour créer les dates dans le timezone du serveur (Africa/Casablanca)
                            const now = moment().tz('Africa/Casablanca');
                            let start = moment(now);
                            
                            if (unit === 'hours') {
                                start = start.subtract(value, 'hours');
                            } else if (unit === 'days') {
                                start = start.subtract(value, 'days');
                            }
                            
                            // Mise à jour dynamique des champs sans recharger la page
                            const formatDateTime = (momentObj) => {
                                return momentObj.format('YYYY-MM-DDTHH:mm');
                            };
                            
                            document.getElementById('start_datetime').value = formatDateTime(start);
                            document.getElementById('end_datetime').value = formatDateTime(now);
                            
                            // Soumettre le formulaire pour recharger les données
                            document.getElementById('customFilterForm').submit();
                        }
                    </script>

                    <hr />
                    <br />

                    {# --------------------------------------------------------------------- #}
                    {# PARAMÈTRES CHIMIQUES (Google Sheets)                                       #}
                    {# --------------------------------------------------------------------- #}

                    <style>
                        .chemistry-section {
                            background: white;
                            border-radius: 16px;
                            padding: 30px;
                            margin: 30px auto;
                            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
                            border-top: 5px solid #008B74;
                        }
                        
                        .chemistry-header {
                            display: flex;
                            align-items: center;
                            gap: 15px;
                            margin-bottom: 25px;
                            padding-bottom: 15px;
                            border-bottom: 3px solid #008B74;
                        }
                        
                        .chemistry-header h2 {
                            margin: 0;
                            color: #008B74;
                            font-size: 1.8em;
                            font-weight: bold;
                        }
                        
                        .chemistry-header i {
                            font-size: 2em;
                            color: #008B74;
                        }
                        
                        .chemistry-info-banner {
                            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                            color: white;
                            padding: 20px 25px;
                            border-radius: 12px;
                            margin-bottom: 30px;
                            display: flex;
                            align-items: center;
                            gap: 20px;
                            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
                        }
                        
                        .chemistry-info-icon {
                            font-size: 2.5em;
                            opacity: 0.9;
                            flex-shrink: 0;
                        }
                        
                        .chemistry-info-content {
                            flex: 1;
                        }
                        
                        .chemistry-info-title {
                            font-size: 1.1em;
                            font-weight: bold;
                            margin-bottom: 8px;
                            display: flex;
                            align-items: center;
                            gap: 10px;
                        }
                        
                        .chemistry-info-text {
                            font-size: 0.95em;
                            line-height: 1.5;
                            opacity: 0.95;
                        }
                        
                        .chemistry-charts-grid {
                            display: grid;
                            grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
                            gap: 30px;
                            margin-top: 25px;
                            justify-items: center;
                            max-width: 1800px;
                            margin-left: auto;
                            margin-right: auto;
                        }
                        
                        .chemistry-chart-card {
                            background: #f8f9fa;
                            border-radius: 12px;
                            padding: 20px;
                            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
                            transition: transform 0.3s, box-shadow 0.3s;
                            border: 1px solid #e0e0e0;
                            width: 100%;
                            max-width: 650px;
                        }
                        
                        .chemistry-chart-card:hover {
                            transform: translateY(-5px);
                            box-shadow: 0 6px 20px rgba(0,139,116,0.2);
                        }
                        
                        .chemistry-chart-header {
                            display: flex;
                            align-items: center;
                            gap: 12px;
                            margin-bottom: 15px;
                            padding-bottom: 12px;
                            border-bottom: 2px solid #008B74;
                        }
                        
                        .chemistry-chart-icon {
                            font-size: 1.5em;
                            color: #008B74;
                        }
                        
                        .chemistry-chart-title {
                            font-size: 1.2em;
                            font-weight: bold;
                            color: #2c3e50;
                            margin: 0;
                        }
                        
                        .chemistry-chart-container {
                            background: white;
                            border-radius: 8px;
                            overflow: hidden;
                            box-shadow: 0 1px 3px rgba(0,0,0,0.1) inset;
                        }
                        
                        .chemistry-chart-container iframe {
                            width: 100%;
                            height: 400px;
                            border: none;
                            display: block;
                        }
                        
                        .chemistry-legend {
                            margin-top: 25px;
                            padding: 20px;
                            background: linear-gradient(135deg, #f5f7fa 0%, #e8ecf1 100%);
                            border-radius: 12px;
                            border-left: 4px solid #008B74;
                        }
                        
                        .chemistry-legend-title {
                            font-size: 1.1em;
                            font-weight: bold;
                            color: #2c3e50;
                            margin-bottom: 12px;
                            display: flex;
                            align-items: center;
                            gap: 10px;
                        }
                        
                        .chemistry-legend-grid {
                            display: grid;
                            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                            gap: 15px;
                        }
                        
                        .chemistry-legend-item {
                            display: flex;
                            align-items: start;
                            gap: 10px;
                            padding: 10px;
                            background: white;
                            border-radius: 8px;
                            box-shadow: 0 1px 3px rgba(0,0,0,0.05);
                        }
                        
                        .chemistry-legend-icon {
                            color: #008B74;
                            font-size: 1.2em;
                            margin-top: 2px;
                        }
                        
                        .chemistry-legend-content {
                            flex: 1;
                        }
                        
                        .chemistry-legend-label {
                            font-weight: 600;
                            color: #2c3e50;
                            margin-bottom: 3px;
                            font-size: 0.95em;
                        }
                        
                        .chemistry-legend-value {
                            font-size: 0.85em;
                            color: #7f8c8d;
                            line-height: 1.4;
                        }
                        
                        @media (max-width: 768px) {
                            .chemistry-section {
                                padding: 20px;
                                margin: 20px 10px;
                            }
                            
                            .chemistry-charts-grid {
                                grid-template-columns: 1fr;
                            }
                            
                            .chemistry-info-banner {
                                flex-direction: column;
                                text-align: center;
                            }
                            
                            .chemistry-chart-container iframe {
                                height: 350px;
                            }
                            
                            .chemistry-legend-grid {
                                grid-template-columns: 1fr;
                            }
                        }
                    </style>

                    <div class="chemistry-section">
                        <!-- En-tête de la section -->
                        <div class="chemistry-header">
                            <i class="fas fa-flask"></i>
                    <h2>Suivi des paramètres chimiques de l'eau</h2>
                        </div>

                        <!-- Bannière d'information -->
                        <div class="chemistry-info-banner">
                            <div class="chemistry-info-icon">
                                <i class="fas fa-graduation-cap"></i>
                            </div>
                            <div class="chemistry-info-content">
                                <div class="chemistry-info-title">
                                    <i class="fas fa-users"></i>
                                    Analyses manuelles réalisées par les élèves
                                </div>
                                <div class="chemistry-info-text">
                                    Ces mesures sont effectuées régulièrement par les élèves à l'aide d'un kit d'analyse dédié à l'aquariophilie. 
                                    Le suivi de ces paramètres chimiques est essentiel pour maintenir un écosystème aquaponique équilibré et assurer 
                                    le bien-être des poissons et la croissance optimale des plantes.
                                </div>
                            </div>
                        </div>

                        <!-- Grille des graphiques -->
                        <div class="chemistry-charts-grid">
                            <!-- Graphique 1 -->
                            <div class="chemistry-chart-card">
                                <div class="chemistry-chart-header">
                                    <i class="fas fa-chart-line chemistry-chart-icon"></i>
                                    <h3 class="chemistry-chart-title">Paramètres principaux</h3>
                                </div>
                                <div class="chemistry-chart-container">
                                    <iframe seamless scrolling="no" 
                                            src="https://docs.google.com/spreadsheets/d/e/2PACX-1vTrF6mLbo5-qLN-uhd7J2LeeV7LvE9LEr9nkyXgh7KUUh7lL-Houdx3XpIQ_-3vJk50e7dTuUAvQ-dR/pubchart?oid=209032696&amp;format=interactive">
                                    </iframe>
                                </div>
                            </div>

                            <!-- Graphique 2 -->
                            <div class="chemistry-chart-card">
                                <div class="chemistry-chart-header">
                                    <i class="fas fa-chart-area chemistry-chart-icon"></i>
                                    <h3 class="chemistry-chart-title">Nutriments et minéraux</h3>
                                </div>
                                <div class="chemistry-chart-container">
                                    <iframe seamless scrolling="no" 
                                            src="https://docs.google.com/spreadsheets/d/e/2PACX-1vTrF6mLbo5-qLN-uhd7J2LeeV7LvE9LEr9nkyXgh7KUUh7lL-Houdx3XpIQ_-3vJk50e7dTuUAvQ-dR/pubchart?oid=699943208&amp;format=interactive">
                                    </iframe>
                                </div>
                            </div>

                            <!-- Graphique 3 -->
                            <div class="chemistry-chart-card">
                                <div class="chemistry-chart-header">
                                    <i class="fas fa-chart-bar chemistry-chart-icon"></i>
                                    <h3 class="chemistry-chart-title">Équilibre chimique</h3>
                                </div>
                                <div class="chemistry-chart-container">
                                    <iframe seamless scrolling="no" 
                                            src="https://docs.google.com/spreadsheets/d/e/2PACX-1vTrF6mLbo5-qLN-uhd7J2LeeV7LvE9LEr9nkyXgh7KUUh7lL-Houdx3XpIQ_-3vJk50e7dTuUAvQ-dR/pubchart?oid=1338338691&amp;format=interactive">
                                    </iframe>
                                </div>
                            </div>
                        </div>

                        <!-- Légende informative -->
                        <div class="chemistry-legend">
                            <div class="chemistry-legend-title">
                                <i class="fas fa-info-circle"></i>
                                Paramètres surveillés
                            </div>
                            <div class="chemistry-legend-grid">
                                <div class="chemistry-legend-item">
                                    <i class="fas fa-tint chemistry-legend-icon"></i>
                                    <div class="chemistry-legend-content">
                                        <div class="chemistry-legend-label">pH (Potentiel Hydrogène)</div>
                                        <div class="chemistry-legend-value">Mesure l'acidité ou l'alcalinité de l'eau. Idéal : 6,8-7,2</div>
                                    </div>
                                </div>
                                <div class="chemistry-legend-item">
                                    <i class="fas fa-wind chemistry-legend-icon"></i>
                                    <div class="chemistry-legend-content">
                                        <div class="chemistry-legend-label">Ammoniaque (NH₃)</div>
                                        <div class="chemistry-legend-value">Toxique pour les poissons. Doit rester < 0,02 mg/L</div>
                                    </div>
                                </div>
                                <div class="chemistry-legend-item">
                                    <i class="fas fa-leaf chemistry-legend-icon"></i>
                                    <div class="chemistry-legend-content">
                                        <div class="chemistry-legend-label">Nitrites (NO₂)</div>
                                        <div class="chemistry-legend-value">Indicateur du cycle de l'azote. Doit être indétectable</div>
                                    </div>
                                </div>
                                <div class="chemistry-legend-item">
                                    <i class="fas fa-seedling chemistry-legend-icon"></i>
                                    <div class="chemistry-legend-content">
                                        <div class="chemistry-legend-label">Nitrates (NO₃)</div>
                                        <div class="chemistry-legend-value">Nutriment pour les plantes. Optimal : 5-150 mg/L</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    {# --------------------------------------------------------------------- #}
                    {# SCRIPTS JS – INJECTION DES DONNÉES                                         #}
                    {# --------------------------------------------------------------------- #}

                    <script>
                        // Configuration globale Highcharts : utilise Africa/Casablanca
                        // Les timestamps PHP sont créés avec Europe/Paris mais l'heure RÉELLE est à Casablanca
                        // Afficher en Casablanca pour voir l'heure locale réelle du projet
                        Highcharts.setOptions({
                            time: {
                                timezone: 'Africa/Casablanca'
                            }
                        });

                        // Tableaux PHP ➜ Twig ➜ JavaScript (données Highcharts)
                        var EauAquarium = {{ EauAquarium|raw }};
                        var EauReserve  = {{ EauReserve|raw }};
                        var EauPotager  = {{ EauPotager|raw }};

                        var TempAir    = {{ TempAir|raw }};
                        var TempEau    = {{ TempEau|raw }};
                        var Humidite   = {{ Humidite|raw }};
                        var Luminosite = {{ Luminosite|raw }};

                        var etatPompeAqua = {{ etatPompeAqua|raw }};
                        var etatPompeTank = {{ etatPompeTank|raw }};
                        var etatHeat      = {{ etatHeat|raw }};
                        var etatUV        = {{ etatUV|raw }};

                        var bouffePetits = {{ bouffePetits|raw }};
                        var bouffeGros   = {{ bouffeGros|raw }};

                        var reading_time = {{ reading_time|raw }};

                        // Association horodatage ➜ valeurs
                        for (var i = 0, l = EauAquarium.length; i < l; i++) {
                            EauAquarium[i] = [ reading_time[i], EauAquarium[i] ];
                            EauReserve[i]  = [ reading_time[i], EauReserve[i]  ];
                            EauPotager[i]  = [ reading_time[i], EauPotager[i]  ];
                            etatPompeAqua[i] = [ reading_time[i], etatPompeAqua[i] ];
                            etatPompeTank[i] = [ reading_time[i], etatPompeTank[i] ];
                            etatHeat[i]      = [ reading_time[i], etatHeat[i]      ];
                            TempEau[i]       = [ reading_time[i], TempEau[i]       ];
                            TempAir[i]       = [ reading_time[i], TempAir[i]       ];
                            Humidite[i]      = [ reading_time[i], Humidite[i]      ];
                            Luminosite[i]    = [ reading_time[i], Luminosite[i]    ];
                            etatUV[i]        = [ reading_time[i], etatUV[i]        ];
                            bouffePetits[i]  = [ reading_time[i], bouffePetits[i]  ];
                            bouffeGros[i]    = [ reading_time[i], bouffeGros[i]    ];
                        }

                        // ==============================================
                        // Calcul des lignes de tendance pour les niveaux d'eau
                        // ==============================================
                        
                        // Calcul des tendances pour EauAquarium
                        var EauAquariumTrendLine = null;
                        var EauAquariumMovingAvg = null;
                        if (EauAquarium && EauAquarium.length >= 2) {
                            EauAquariumTrendLine = calculateLinearRegression(EauAquarium);
                            EauAquariumMovingAvg = calculateMovingAverage(EauAquarium, 20);
                        }
                        
                        // Calcul des tendances pour EauReserve
                        var EauReserveTrendLine = null;
                        var EauReserveMovingAvg = null;
                        if (EauReserve && EauReserve.length >= 2) {
                            EauReserveTrendLine = calculateLinearRegression(EauReserve);
                            EauReserveMovingAvg = calculateMovingAverage(EauReserve, 20);
                        }
                        
                        // Calcul des tendances pour EauPotager
                        var EauPotagerTrendLine = null;
                        var EauPotagerMovingAvg = null;
                        if (EauPotager && EauPotager.length >= 2) {
                            EauPotagerTrendLine = calculateLinearRegression(EauPotager);
                            EauPotagerMovingAvg = calculateMovingAverage(EauPotager, 20);
                        }

                        // ==============================================
                        // Configuration globale du timezone
                        // ==============================================
                        
                        // Le serveur stocke en Europe/Paris, mais on affiche en Africa/Casablanca
                        // (heure locale réelle du projet physique au Maroc)
                        moment.tz.setDefault('Africa/Casablanca');
                        
                        // Configuration Highcharts pour utiliser le même timezone
                        Highcharts.setOptions({
                            time: {
                                timezone: 'Africa/Casablanca',
                                useUTC: false
                            }
                        });
                        
                        // ==============================================
                        // Fonctions de calcul des lignes de tendance
                        // ==============================================
                        
                        // Calcul de régression linéaire (y = ax + b)
                        function calculateLinearRegression(data) {
                            if (!data || data.length < 2) return null;
                            
                            let n = data.length;
                            let sumX = 0, sumY = 0, sumXY = 0, sumXX = 0;
                            
                            // Calcul des sommes
                            for (let i = 0; i < n; i++) {
                                let x = i; // index temporel
                                let y = data[i][1]; // valeur
                                sumX += x;
                                sumY += y;
                                sumXY += x * y;
                                sumXX += x * x;
                            }
                            
                            // Calcul des coefficients
                            let a = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);
                            let b = (sumY - a * sumX) / n;
                            
                            // Génération des points de la droite de tendance
                            let trendData = [];
                            for (let i = 0; i < n; i++) {
                                let x = i;
                                let y = a * x + b;
                                trendData.push([data[i][0], y]); // [timestamp, valeur calculée]
                            }
                            
                            return {
                                data: trendData,
                                slope: a,
                                intercept: b
                            };
                        }
                        
                        // Calcul de moyenne mobile
                        function calculateMovingAverage(data, window = 20) {
                            if (!data || data.length < window) return null;
                            
                            let movingAvgData = [];
                            
                            for (let i = window - 1; i < data.length; i++) {
                                let sum = 0;
                                for (let j = 0; j < window; j++) {
                                    sum += data[i - j][1];
                                }
                                let avg = sum / window;
                                movingAvgData.push([data[i][0], avg]);
                            }
                            
                            return movingAvgData;
                        }
                        
                        // ==============================================
                        // Graphiques Stock Navigator + Aires colorées
                        // ==============================================
                        
                        function createVersionD() {
                            // 1. Stock Chart Niveaux d'eau avec aires
                            Highcharts.stockChart('chart-stock-area-eau-D', {
                                chart: { height: 600 },
                                rangeSelector: {
                                    buttons: [
                                        { type: 'hour', count: 1, text: '1h' },
                                        { type: 'hour', count: 6, text: '6h' },
                                        { type: 'day', count: 1, text: '1j' },
                                        { type: 'week', count: 1, text: '1s' },
                                        { type: 'month', count: 1, text: '1m' },
                                        { type: 'all', text: 'Tout' }
                                    ],
                                    selected: 1,
                                    inputEnabled: true
                                },
                                title: { text: null },
                                xAxis: {
                                    type: 'datetime',
                                    events: {
                                        afterSetExtremes: function(e) {
                                            // Recalculer les tendances pour la fenêtre visible
                                            if (e.min && e.max) {
                                                var visibleData = {
                                                    EauAquarium: EauAquarium.filter(point => point[0] >= e.min && point[0] <= e.max),
                                                    EauReserve: EauReserve.filter(point => point[0] >= e.min && point[0] <= e.max),
                                                    EauPotager: EauPotager.filter(point => point[0] >= e.min && point[0] <= e.max)
                                                };
                                                
                                                // Recalculer les tendances pour les données visibles
                                                var newTrends = {};
                                                Object.keys(visibleData).forEach(key => {
                                                    if (visibleData[key].length >= 2) {
                                                        newTrends[key + 'TrendLine'] = calculateLinearRegression(visibleData[key]);
                                                        newTrends[key + 'MovingAvg'] = calculateMovingAverage(visibleData[key], 20);
                                                    }
                                                });
                                                
                                                // Mettre à jour les séries de tendance
                                                var chart = this.chart;
                                                var series = chart.series;
                                                
                                                // Mettre à jour les séries de régression linéaire (index 6, 7, 8)
                                                for (var i = 6; i <= 8; i++) {
                                                    if (series[i] && series[i].name.includes('linéaire')) {
                                                        var dataKey = series[i].name.includes('aquarium') ? 'EauAquarium' : 
                                                                     series[i].name.includes('réserve') ? 'EauReserve' : 'EauPotager';
                                                        if (newTrends[dataKey + 'TrendLine']) {
                                                            series[i].setData(newTrends[dataKey + 'TrendLine'].data);
                                                        }
                                                    }
                                                }
                                                
                                                // Mettre à jour les séries de moyenne mobile (index 9, 10, 11)
                                                for (var i = 9; i <= 11; i++) {
                                                    if (series[i] && series[i].name.includes('moy. mobile')) {
                                                        var dataKey = series[i].name.includes('aquarium') ? 'EauAquarium' : 
                                                                     series[i].name.includes('réserve') ? 'EauReserve' : 'EauPotager';
                                                        if (newTrends[dataKey + 'MovingAvg']) {
                                                            series[i].setData(newTrends[dataKey + 'MovingAvg']);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                yAxis: { 
                                    labels: { format: '{value} cm' },
                                    title: { text: 'Niveaux eau (cm)' },
                                    lineWidth: 2,
                                    plotBands: [
                                        { from: 0, to: 15, color: 'rgba(255,0,0,0.05)', label: { text: 'Critique', style: { color: '#d32f2f', fontSize: '10px' } } },
                                        { from: 15, to: 65, color: 'rgba(76,175,80,0.05)', label: { text: 'Optimal', style: { color: '#43a047', fontSize: '10px' } } },
                                        { from: 65, to: 100, color: 'rgba(255,152,0,0.05)', label: { text: 'Attention', style: { color: '#ff9800', fontSize: '10px' } } }
                                    ]
                                },
                                tooltip: { 
                                    shared: true,
                                    split: false,
                                    valueDecimals: 1
                                },
                                plotOptions: {
                                    areaspline: {
                                        fillOpacity: 0.3,
                                        marker: { enabled: false, radius: 2 }
                                    },
                                    series: {
                                        showInNavigator: true
                                    }
                                },
                                legend: {
                                    enabled: true,
                                    align: 'center',
                                    verticalAlign: 'bottom',
                                    layout: 'horizontal',
                                    itemStyle: {
                                        fontSize: '11px'
                                    },
                                    maxHeight: 120,
                                    navigation: {
                                        activeColor: '#3E6F7A',
                                        inactiveColor: '#CCC'
                                    }
                                },
                                series: [
                                    { 
                                        name: 'Eau réserve', 
                                        type: 'areaspline',
                                        data: EauReserve, 
                                        color: '#007E61',
                                        fillColor: {
                                            linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },
                                            stops: [[0, 'rgba(0,126,97,0.3)'], [1, 'rgba(0,126,97,0.05)']]
                                        },
                                        dashStyle: 'ShortDot',
                                        lineWidth: 2,
                                        tooltip: { valueSuffix: ' cm' } 
                                    },
                                    { 
                                        name: 'Eau potager', 
                                        type: 'areaspline',
                                        data: EauPotager, 
                                        color: '#27BDA0',
                                        fillColor: {
                                            linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },
                                            stops: [[0, 'rgba(39,189,160,0.3)'], [1, 'rgba(39,189,160,0.05)']]
                                        },
                                        lineWidth: 1.5,
                                        tooltip: { valueSuffix: ' cm' } 
                                    },
                                    { 
                                        name: 'Eau aquarium', 
                                        type: 'areaspline',
                                        data: EauAquarium, 
                                        color: '#FF6300',
                                        fillColor: {
                                            linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },
                                            stops: [[0, 'rgba(255,99,0,0.3)'], [1, 'rgba(255,99,0,0.05)']]
                                        },
                                        lineWidth: 2,
                                        tooltip: { valueSuffix: ' cm' } 
                                    },
                                    { 
                                        name: 'Pompe aquarium ON', 
                                        type: 'scatter', 
                                        data: etatPompeAqua.filter(p => p[1] > 0), 
                                        color: 'rgba(39,189,160,0.6)',
                                        marker: { symbol: 'circle', radius: 3 },
                                        showInNavigator: false,
                                        tooltip: { pointFormat: 'Pompe aquarium: <b>ON</b>' }
                                    },
                                    { 
                                        name: 'Pompe réserve ON', 
                                        type: 'scatter', 
                                        data: etatPompeTank.filter(p => p[1] > 0), 
                                        color: 'rgba(255,159,100,0.6)',
                                        marker: { symbol: 'square', radius: 3 },
                                        showInNavigator: false,
                                        tooltip: { pointFormat: 'Pompe réserve: <b>ON</b>' }
                                    },
                                    { 
                                        name: 'Chauffage ON', 
                                        type: 'scatter', 
                                        data: etatHeat.filter(p => p[1] > 0), 
                                        color: 'rgba(0,142,114,0.6)',
                                        marker: { symbol: 'triangle', radius: 4 },
                                        showInNavigator: false,
                                        tooltip: { pointFormat: 'Chauffage: <b>ON</b>' }
                                    },
                                    // Lignes de tendance - régression linéaire
                                    { 
                                        name: 'Tendance aquarium (linéaire)', 
                                        type: 'line', 
                                        data: EauAquariumTrendLine ? EauAquariumTrendLine.data : [],
                                        color: '#FF6300',
                                        lineWidth: 2,
                                        dashStyle: 'Dash',
                                        visible: false,
                                        showInLegend: true,
                                        enableMouseTracking: false,
                                        showInNavigator: false,
                                        tooltip: { valueSuffix: ' cm' }
                                    },
                                    { 
                                        name: 'Tendance réserve (linéaire)', 
                                        type: 'line', 
                                        data: EauReserveTrendLine ? EauReserveTrendLine.data : [],
                                        color: '#007E61',
                                        lineWidth: 2,
                                        dashStyle: 'Dash',
                                        visible: false,
                                        showInLegend: true,
                                        enableMouseTracking: false,
                                        showInNavigator: false,
                                        tooltip: { valueSuffix: ' cm' }
                                    },
                                    { 
                                        name: 'Tendance potager (linéaire)', 
                                        type: 'line', 
                                        data: EauPotagerTrendLine ? EauPotagerTrendLine.data : [],
                                        color: '#27BDA0',
                                        lineWidth: 2,
                                        dashStyle: 'Dash',
                                        visible: false,
                                        showInLegend: true,
                                        enableMouseTracking: false,
                                        showInNavigator: false,
                                        tooltip: { valueSuffix: ' cm' }
                                    },
                                    // Lignes de tendance - moyenne mobile
                                    { 
                                        name: 'Tendance aquarium (moy. mobile)', 
                                        type: 'line', 
                                        data: EauAquariumMovingAvg || [],
                                        color: '#FF6300',
                                        lineWidth: 2,
                                        dashStyle: 'Solid',
                                        opacity: 0.7,
                                        visible: false,
                                        showInLegend: true,
                                        enableMouseTracking: false,
                                        showInNavigator: false,
                                        tooltip: { valueSuffix: ' cm' }
                                    },
                                    { 
                                        name: 'Tendance réserve (moy. mobile)', 
                                        type: 'line', 
                                        data: EauReserveMovingAvg || [],
                                        color: '#007E61',
                                        lineWidth: 2,
                                        dashStyle: 'Solid',
                                        opacity: 0.7,
                                        visible: false,
                                        showInLegend: true,
                                        enableMouseTracking: false,
                                        showInNavigator: false,
                                        tooltip: { valueSuffix: ' cm' }
                                    },
                                    { 
                                        name: 'Tendance potager (moy. mobile)', 
                                        type: 'line', 
                                        data: EauPotagerMovingAvg || [],
                                        color: '#27BDA0',
                                        lineWidth: 2,
                                        dashStyle: 'Solid',
                                        opacity: 0.7,
                                        visible: false,
                                        showInLegend: true,
                                        enableMouseTracking: false,
                                        showInNavigator: false,
                                        tooltip: { valueSuffix: ' cm' }
                                    }
                                ],
                                navigator: { 
                                    enabled: true,
                                    height: 40
                                },
                                scrollbar: { enabled: true },
                                credits: { enabled: false }
                            });
                            
                            // 2. Stock Chart Paramètres physiques avec aires
                            Highcharts.stockChart('chart-stock-area-temp-D', {
                                chart: { height: 700 },
                                rangeSelector: {
                                    buttons: [
                                        { type: 'hour', count: 1, text: '1h' },
                                        { type: 'hour', count: 6, text: '6h' },
                                        { type: 'day', count: 1, text: '1j' },
                                        { type: 'week', count: 1, text: '1s' },
                                        { type: 'month', count: 1, text: '1m' },
                                        { type: 'all', text: 'Tout' }
                                    ],
                                    selected: 1,
                                    inputEnabled: true
                                },
                                title: { text: null },
                                yAxis: [{ 
                                    labels: { format: '{value}°C' },
                                    title: { text: 'Températures (°C)' },
                                    height: '25%',
                                    lineWidth: 2
                                }, {
                                    labels: { format: '{value}%' },
                                    title: { text: 'Humidité (%)' },
                                    top: '30%',
                                    height: '25%',
                                    offset: 0,
                                    lineWidth: 2
                                }, {
                                    labels: { format: '{value} UA' },
                                    title: { text: 'Luminosité (UA)' },
                                    top: '60%',
                                    height: '25%',
                                    offset: 0,
                                    lineWidth: 2
                                }, {
                                    labels: { enabled: false },
                                    title: { text: '' },
                                    top: '88%',
                                    height: '10%',
                                    offset: 0,
                                    max: 1.5
                                }],
                                tooltip: { 
                                    shared: true, 
                                    split: false,
                                    valueDecimals: 1
                                },
                                plotOptions: {
                                    areaspline: {
                                        fillOpacity: 0.3,
                                        marker: { enabled: false, radius: 2 }
                                    },
                                    series: {
                                        showInNavigator: true
                                    },
                                    column: {
                                        stacking: null,
                                        grouping: false,
                                        pointPadding: 0,
                                        borderWidth: 0,
                                        opacity: 0.6
                                    }
                                },
                                series: [
                                    { 
                                        name: 'Température eau', 
                                        type: 'areaspline',
                                        data: TempEau, 
                                        yAxis: 0, 
                                        color: '#00B794',
                                        fillColor: {
                                            linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },
                                            stops: [[0, 'rgba(0,183,148,0.3)'], [1, 'rgba(0,183,148,0.05)']]
                                        },
                                        lineWidth: 2,
                                        tooltip: { valueSuffix: '°C' } 
                                    },
                                    { 
                                        name: 'Température air', 
                                        type: 'areaspline',
                                        data: TempAir, 
                                        yAxis: 0, 
                                        color: '#007E61',
                                        fillColor: {
                                            linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },
                                            stops: [[0, 'rgba(0,126,97,0.3)'], [1, 'rgba(0,126,97,0.05)']]
                                        },
                                        lineWidth: 2,
                                        tooltip: { valueSuffix: '°C' } 
                                    },
                                    { 
                                        name: 'Humidité', 
                                        type: 'areaspline',
                                        data: Humidite, 
                                        yAxis: 1, 
                                        color: '#2980b9',
                                        fillColor: {
                                            linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },
                                            stops: [[0, 'rgba(41,128,185,0.3)'], [1, 'rgba(41,128,185,0.05)']]
                                        },
                                        lineWidth: 2,
                                        tooltip: { valueSuffix: '%' } 
                                    },
                                    { 
                                        name: 'Luminosité', 
                                        type: 'areaspline',
                                        data: Luminosite, 
                                        yAxis: 2, 
                                        color: '#FF6300',
                                        fillColor: {
                                            linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },
                                            stops: [[0, 'rgba(255,99,0,0.3)'], [1, 'rgba(255,99,0,0.05)']]
                                        },
                                        lineWidth: 2,
                                        tooltip: { valueSuffix: ' UA' } 
                                    },
                                    { 
                                        name: 'LEDs', 
                                        data: etatUV, 
                                        type: 'column', 
                                        yAxis: 3, 
                                        color: 'rgba(243,156,18,0.7)',
                                        showInNavigator: false
                                    },
                                    { 
                                        name: 'Nourriture gros', 
                                        data: bouffeGros, 
                                        type: 'column', 
                                        yAxis: 3, 
                                        color: 'rgba(231,76,60,0.7)',
                                        showInNavigator: false
                                    },
                                    { 
                                        name: 'Nourriture petits', 
                                        data: bouffePetits, 
                                        type: 'column', 
                                        yAxis: 3, 
                                        color: 'rgba(155,89,182,0.7)',
                                        showInNavigator: false
                                    }
                                ],
                                navigator: { 
                                    enabled: true,
                                    height: 40
                                },
                                scrollbar: { enabled: true },
                                credits: { enabled: false }
                            });
                        }
                        
                        // Initialiser les graphiques
                        createVersionD();

                        // --- Dernières valeurs ➜ gauges ---
                        var TemperatureAir = {{ last_reading_tempair|default(0) }};
                        var TemperatureEau = {{ last_reading_tempeau|default(0) }};
                        var HumiditeLast   = {{ last_reading_humi|default(0) }};
                        var LuminositeLast = {{ last_reading_lumi|default(0) }};
                        var EauAquariumLast = {{ last_reading_eauaqua|default(0) }};
                        var EauReserveLast  = {{ last_reading_eaureserve|default(0) }};
                        var EauPotagerLast  = {{ last_reading_eaupota|default(0) }};

                        // Affichage direct des dernières valeurs dans les cartes
                        setTempAir(TemperatureAir);
                        setTempEau(TemperatureEau);
                        setHumidite(HumiditeLast);
                        setLuminosite(LuminositeLast);
                        setEauAquarium(EauAquariumLast);
                        setEauReserve(EauReserveLast);
                        setEauPotager(EauPotagerLast);

                        // ---------- Fonctions helper jauges ----------
                        function scaleValue(value, from, to) {
                            var scale = (to[1] - to[0]) / (from[1] - from[0]);
                            var capped = Math.min(from[1], Math.max(from[0], value)) - from[0];
                            return ~~(capped * scale + to[0]);
                        }

                        // Fonctions modernes pour mettre à jour les cartes de statistiques
                        function updateStatCard(displayId, progressId, value, unit, max) {
                            var displayEl = document.getElementById(displayId);
                            var progressEl = document.getElementById(progressId);
                            if (displayEl) {
                                displayEl.innerHTML = value.toFixed(1) + ' <span class="stat-card-unit">' + unit + '</span>';
                            }
                            if (progressEl && max) {
                                var percentage = (value / max * 100).toFixed(0);
                                progressEl.style.width = Math.min(100, Math.max(0, percentage)) + '%';
                            }
                        }

                        function setTempAir(curVal){
                            updateStatCard('tempair-display', 'tempair-progress', curVal, '°C', 40);
                        }
                        function setTempEau(curVal){
                            updateStatCard('tempeau-display', 'tempeau-progress', curVal, '°C', 40);
                        }
                        function setHumidite(curVal){
                            updateStatCard('humi-display', 'humi-progress', curVal, '%', 100);
                        }
                        function setLuminosite(curVal){
                            var displayEl = document.getElementById('lumi-display');
                            var progressEl = document.getElementById('lumi-progress');
                            if (displayEl) {
                                displayEl.innerHTML = curVal.toFixed(0) + ' <span class="stat-card-unit">UA</span>';
                            }
                            if (progressEl) {
                                var percentage = (curVal / 4000 * 100).toFixed(0);
                                progressEl.style.width = Math.min(100, Math.max(0, percentage)) + '%';
                            }
                        }
                        function setEauAquarium(curVal){
                            updateStatCard('eauaqua-display', null, curVal, 'cm', null);
                            var progressEl = document.getElementById('eauaqua-display').parentElement.querySelector('.progress-bar');
                            if (progressEl) {
                                progressEl.style.width = Math.min(100, Math.max(0, curVal)) + '%';
                            }
                        }
                        function setEauReserve(curVal){
                            updateStatCard('eaureserve-display', null, curVal, 'cm', null);
                            var progressEl = document.getElementById('eaureserve-display').parentElement.querySelector('.progress-bar');
                            if (progressEl) {
                                progressEl.style.width = Math.min(100, Math.max(0, curVal)) + '%';
                            }
                        }
                        function setEauPotager(curVal){
                            updateStatCard('eaupota-display', null, curVal, 'cm', null);
                            var progressEl = document.getElementById('eaupota-display').parentElement.querySelector('.progress-bar');
                            if (progressEl) {
                                progressEl.style.width = Math.min(100, Math.max(0, curVal)) + '%';
                            }
                        }
                    </script>

                    <!-- Fin du contenu migré -->
                </article>
            </div>
            
            <!-- Footer avec version -->
            <footer id="footer" style="text-align: center; padding: 20px 0; color: #999; font-size: 0.9em;">
                <p>{{ version }} | Firmware ESP32: v{{ firmware_version }} | Système d'aquaponie FFP3 | © 2025 olution</p>
            </footer>
        </div>

    <!-- Badge LIVE pour indicateur temps réel -->
    <div id="live-badge" class="badge badge-secondary">
        <i class="fas fa-circle"></i> INITIALISATION...
    </div>

    <!-- Scripts PWA et Temps Réel -->
    <script src="/ffp3/assets/js/toast-notifications.js"></script>
    <script src="/ffp3/assets/js/chart-updater.js"></script>
    <script src="/ffp3/assets/js/stats-updater.js"></script>
    <script src="/ffp3/assets/js/realtime-updater.js"></script>
    <script src="/ffp3/assets/js/pwa-init.js"></script>
        
    <script>
        // Variables globales pour les modules
        let chartUpdater = null;
        let statsUpdater = null;
        let newReadingsCount = 0;
        // realtimeUpdater est déjà déclaré globalement dans realtime-updater.js
        
        // Charger les préférences depuis localStorage
        function loadLivePreferences() {
            const prefs = {
                enabled: localStorage.getItem('liveMode.enabled') !== 'false', // true par défaut
                autoScroll: localStorage.getItem('liveMode.autoScroll') !== 'false',
                interval: parseInt(localStorage.getItem('liveMode.interval')) || 15000,
                maxPoints: parseInt(localStorage.getItem('liveMode.maxPoints')) || 10000
            };
            return prefs;
        }
        
        // Sauvegarder les préférences
        function saveLivePreferences(prefs) {
            localStorage.setItem('liveMode.enabled', prefs.enabled);
            localStorage.setItem('liveMode.autoScroll', prefs.autoScroll);
            localStorage.setItem('liveMode.interval', prefs.interval);
            localStorage.setItem('liveMode.maxPoints', prefs.maxPoints);
        }
        
        // Initialiser le système temps réel
        document.addEventListener('DOMContentLoaded', function() {
            const prefs = loadLivePreferences();
            
            // Initialiser ChartUpdater
            chartUpdater = new ChartUpdater({
                maxPoints: prefs.maxPoints,
                autoScroll: prefs.autoScroll
            });
            
            // Attendre que les graphiques soient créés (après createVersionD())
            setTimeout(() => {
                const initialized = chartUpdater.init();
                if (initialized) {
                    console.log('[Aquaponie] ChartUpdater initialized successfully');
                } else {
                    console.warn('[Aquaponie] ChartUpdater initialization failed');
                }
            }, 500);
            
            // Initialiser StatsUpdater
            statsUpdater = new StatsUpdater({
                sensors: ['EauAquarium', 'EauReserve', 'EauPotager', 'TempEau', 'TempAir', 'Humidite', 'Luminosite']
            });
            
            setTimeout(() => {
                const initialized = statsUpdater.init();
                if (initialized) {
                    console.log('[Aquaponie] StatsUpdater initialized successfully');
                    
                    // Initialiser les timestamps de période depuis les données PHP
                    // Note: reading_time contient des timestamps en millisecondes (format Highcharts)
                    // On les convertit en secondes Unix pour StatsUpdater
                    const initialStartTimestamp = reading_time && reading_time.length > 0 ? reading_time[0] / 1000 : null;
                    const initialEndTimestamp = reading_time && reading_time.length > 0 ? reading_time[reading_time.length - 1] / 1000 : null;
                    
                    if (initialStartTimestamp && initialEndTimestamp) {
                        statsUpdater.startTimestamp = initialStartTimestamp;
                        statsUpdater.endTimestamp = initialEndTimestamp;
                        statsUpdater.initialStartTimestamp = initialStartTimestamp;
                        statsUpdater.initialEndTimestamp = initialEndTimestamp;
                        statsUpdater.readingCount = reading_time.length;
                        statsUpdater.initialReadingCount = reading_time.length;
                        statsUpdater.liveReadingCount = 0;
                        statsUpdater.updateModeBadge('historical');
                        
                        // Mettre à jour immédiatement les dates affichées avec le bon timezone (Africa/Casablanca)
                        // Cela remplace les dates PHP initiales (Europe/Paris) par les dates JavaScript correctes
                        statsUpdater.updateSummaryDates(initialStartTimestamp, initialEndTimestamp);
                        
                        console.log('[Aquaponie] Initial period set:', {
                            start: new Date(initialStartTimestamp * 1000),
                            end: new Date(initialEndTimestamp * 1000),
                            count: reading_time.length
                        });
                    }
                } else {
                    console.warn('[Aquaponie] StatsUpdater initialization failed');
                }
            }, 500);
            
            // Exposer globalement
            window.chartUpdater = chartUpdater;
            window.statsUpdater = statsUpdater;
            
            // Utiliser le bon path API selon l'environnement
            const apiBasePath = '{{ environment == "test" ? "/ffp3/api/realtime-test" : "/ffp3/api/realtime" }}';
            
            // Initialiser RealtimeUpdater (la variable est déjà globale via realtime-updater.js)
            initRealtimeUpdater({
                apiBasePath: apiBasePath,
                pollInterval: prefs.interval,
                enabled: prefs.enabled,
                onNewData: function(readings) {
                    console.log('[Aquaponie] New sensor data received:', readings);
                    newReadingsCount += readings.length;
                    updateReadingsCounter();
                },
                onHealthUpdate: function(health) {
                    console.log('[Aquaponie] System health updated:', health);
                }
            });
            
            // Appliquer les préférences aux contrôles UI
            document.getElementById('live-mode-toggle').checked = prefs.enabled;
            document.getElementById('auto-scroll-toggle').checked = prefs.autoScroll;
            document.getElementById('update-interval-selector').value = prefs.interval;
            
            // Event listeners pour les contrôles
            
            // Toggle Mode Live
            document.getElementById('live-mode-toggle').addEventListener('change', function(e) {
                if (e.target.checked) {
                    window.realtimeUpdater.start();
                    console.log('[Aquaponie] Live mode enabled');
                } else {
                    window.realtimeUpdater.stop();
                    console.log('[Aquaponie] Live mode disabled');
                }
                prefs.enabled = e.target.checked;
                saveLivePreferences(prefs);
            });
            
            // Toggle Auto-scroll
            document.getElementById('auto-scroll-toggle').addEventListener('change', function(e) {
                if (chartUpdater) {
                    chartUpdater.enableAutoScroll(e.target.checked);
                    console.log('[Aquaponie] Auto-scroll ' + (e.target.checked ? 'enabled' : 'disabled'));
                }
                prefs.autoScroll = e.target.checked;
                saveLivePreferences(prefs);
            });
            
            // Changement d'intervalle
            document.getElementById('update-interval-selector').addEventListener('change', function(e) {
                const newInterval = parseInt(e.target.value);
                if (window.realtimeUpdater) {
                    window.realtimeUpdater.setInterval(newInterval);
                    console.log('[Aquaponie] Update interval changed to ' + newInterval + 'ms');
                }
                prefs.interval = newInterval;
                saveLivePreferences(prefs);
            });
            
            // Bouton rafraîchir maintenant
            document.getElementById('force-refresh-button').addEventListener('click', function() {
                if (window.realtimeUpdater) {
                    console.log('[Aquaponie] Force refresh triggered');
                    window.realtimeUpdater.poll();
                    
                    // Animation du bouton
                    const btn = this;
                    const icon = btn.querySelector('i');
                    icon.classList.add('fa-spin');
                    setTimeout(() => icon.classList.remove('fa-spin'), 1000);
                }
            });
            
            // Fonction pour mettre à jour le compteur de nouvelles lectures
            function updateReadingsCounter() {
                const counter = document.getElementById('new-readings-count');
                if (counter) {
                    counter.textContent = newReadingsCount;
                }
            }
            
            // Réinitialiser le compteur toutes les heures
            setInterval(() => {
                newReadingsCount = 0;
                updateReadingsCounter();
            }, 3600000); // 1 heure
            
            console.log('[Aquaponie] Live update system initialized');
        });
    </script>
    </body>
</html>
